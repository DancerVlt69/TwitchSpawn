buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
version = mod_version
group = "igoodie.twitchspawn" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "twitchspawn_" + minecraft_version

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = minecraft_version + "-" + forge_version
    runDir = "run"
    replace '${mod_version}', mod_version
    mappings = mcpMappings_channel + "_" + mcpMappings_version

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    clientRunArgs.add("-username=iGoodie")
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

configurations {
    mods
    shade
    compile.extendsFrom shade
}

dependencies {
    // Nightly Config by Electronwill
    shade group: 'com.electronwill.night-config', name: 'core', version: '3.6.0'
    shade group: 'com.electronwill.night-config', name: 'toml', version: '3.6.0'

    // SocketIO Client
    shade group: 'io.socket', name: 'socket.io-client', version: '1.0.0'

    // JUnit 5 for testings
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.5.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.0'

    // For more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
}

jar {
    // Include shaded source in the built mod jar
    configurations.shade.each { dep ->
        from(project.zipTree(dep)){
            exclude 'META-INF', 'META-INF/**'
        }
    }
}
